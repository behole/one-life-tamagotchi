
.pet-container {
  position: relative;
  width: 200px;
  height: 200px;
  margin: 0 auto;
  display: flex;
  justify-content: center;
  align-items: center;
}

.pet {
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  transition: transform 0.3s ease;
}

/* Animation for pet based on mood */
.pet-happy {
  animation: bounce 1s infinite alternate;
}

.pet-excited {
  animation: bounce 0.5s infinite alternate;
}

.pet-sad {
  transform: scale(0.9);
}

.pet-hungry {
  animation: wobble 2s infinite;
}

.pet-tired {
  transform: rotate(-5deg);
}

.pet-sick {
  animation: pulse 2s infinite;
  filter: hue-rotate(180deg);
}

.pet-angry {
  animation: shake 0.5s infinite;
}

.pet-sleeping {
  transform: scale(0.9);
}

/* Placeholder for development */
.pet-placeholder {
  width: 100px;
  height: 100px;
  background-color: #f5f5f5;
  border-radius: 50%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  border: 2px solid #ddd;
  position: relative;
}

.pet-stage {
  font-size: 14px;
  font-weight: bold;
  text-transform: uppercase;
}

.pet-mood {
  font-size: 12px;
  margin-top: 5px;
}

.pet-zzz {
  position: absolute;
  top: -20px;
  right: -20px;
  font-size: 24px;
  animation: float 2s infinite alternate;
}

/* Animations */
@keyframes bounce {
  from {
    transform: translateY(0);
  }
  to {
    transform: translateY(-10px);
  }
}

@keyframes wobble {
  0% {
    transform: rotate(-2deg);
  }
  50% {
    transform: rotate(2deg);
  }
  100% {
    transform: rotate(-2deg);
  }
}

@keyframes pulse {
  0% {
    opacity: 1;
  }
  50% {
    opacity: 0.7;
  }
  100% {
    opacity: 1;
  }
}

@keyframes shake {
  0% {
    transform: translateX(0);
  }
  25% {
    transform: translateX(-5px);
  }
  50% {
    transform: translateX(0);
  }
  75% {
    transform: translateX(5px);
  }
  100% {
    transform: translateX(0);
  }
}

@keyframes float {
  from {
    transform: translateY(0);
  }
  to {
    transform: translateY(-5px);
  }
}

/* Stage-specific styles - egg is implemented with CSS */
.pet-egg {
  transform: scale(0.9);
  animation: gentle-pulse 3s infinite alternate;
}

/* CSS-based egg sprite */
.egg-sprite {
  position: relative;
  width: 80px;
  height: 100px;
  background: linear-gradient(135deg, #f5f5f5 0%, #e0e0e0 100%);
  border-radius: 50% 50% 50% 50% / 60% 60% 40% 40%;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  margin: 0 auto;
  position: relative;
  overflow: visible;
}

.egg-sprite::before {
  content: '';
  position: absolute;
  top: 30%;
  left: 25%;
  width: 50%;
  height: 30%;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.8);
  transform: rotate(-10deg);
  filter: blur(2px);
}

.egg-sprite::after {
  content: '';
  position: absolute;
  bottom: 10px;
  left: 10px;
  right: 10px;
  height: 20px;
  background: rgba(0, 0, 0, 0.05);
  border-radius: 50%;
  filter: blur(4px);
}

/* Gentle pulse animation */
@keyframes gentle-pulse {
  0% {
    transform: scale(0.95);
  }
  50% {
    transform: scale(1);
  }
  100% {
    transform: scale(0.95);
  }
}

.pet-baby {
  /* Baby-specific styles */
}

.pet-child {
  /* Child-specific styles */
}

.pet-teen {
  /* Teen-specific styles */
}

.pet-adult {
  /* Adult-specific styles */
}

.pet-elder {
  /* Elder-specific styles */
}